[{"C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\index.js":"1","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\store.js":"2","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\App.js":"3","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\serviceWorker.js":"4","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\routes.js":"5","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\reducers\\rootReducer.js":"6","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\pages\\AdminBooking.js":"7","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\pages\\User.js":"8","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\reducers\\userSlice.js":"9","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\components\\NavigationBar.js":"10","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\pages\\Booking.js":"11","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\components\\FloorSummaryModal.js":"12","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\reducers\\counterSlice.js":"13","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\constants.js":"14","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\components\\AddLocationModal.js":"15","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\components\\UpdateLocationModal.js":"16","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\api.js":"17"},{"size":779,"mtime":1614437842020,"results":"18","hashOfConfig":"19"},{"size":378,"mtime":1614437842035,"results":"20","hashOfConfig":"19"},{"size":2180,"mtime":1614437842008,"results":"21","hashOfConfig":"19"},{"size":5141,"mtime":1614437842032,"results":"22","hashOfConfig":"19"},{"size":1582,"mtime":1615781234896,"results":"23","hashOfConfig":"19"},{"size":429,"mtime":1614437842029,"results":"24","hashOfConfig":"19"},{"size":956,"mtime":1614437842023,"results":"25","hashOfConfig":"19"},{"size":834,"mtime":1614437842026,"results":"26","hashOfConfig":"19"},{"size":1199,"mtime":1614437842029,"results":"27","hashOfConfig":"19"},{"size":2382,"mtime":1614437842017,"results":"28","hashOfConfig":"19"},{"size":821,"mtime":1614437842026,"results":"29","hashOfConfig":"19"},{"size":4468,"mtime":1614437842014,"results":"30","hashOfConfig":"19"},{"size":1551,"mtime":1614437842029,"results":"31","hashOfConfig":"19"},{"size":133,"mtime":1614437842020,"results":"32","hashOfConfig":"19"},{"size":3857,"mtime":1614437842011,"results":"33","hashOfConfig":"19"},{"size":5305,"mtime":1614437842017,"results":"34","hashOfConfig":"19"},{"size":4144,"mtime":1614437842011,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"bag8c9",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"39"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"39"},"C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\index.js",["84"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Routes from './routes';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Routes />\r\n        </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n",["85","86"],"C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\store.js",["87"],"import {configureStore, createStore, applyMiddleware } from '@reduxjs/toolkit';\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport appReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(appReducer, undefined, composeWithDevTools(\r\n    applyMiddleware(thunkMiddleware),\r\n));\r\n\r\nexport default store","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\App.js",["88","89"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport User from \"./pages/User\"\r\nimport './App.css';\r\nimport NavigationBar from \"./components/NavigationBar\"\r\nimport store from \"./store\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Card} from \"react-bootstrap\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            < NavigationBar/>\r\n            <div className=\"heading\">\r\n                <h1> WELCOME TO PANDEMIC PAL </h1>\r\n                <div className=\"links-container\">\r\n                    <div className=\"links\">\r\n                        <Card style={{ minHeight: '175px'}}>\r\n                            <Card.Body>\r\n                                <Card.Title><Link to=\"/booking\" className=\"btn btn-info btn-lg links-btn\"> BOOKINGS </Link></Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">Manage and book your expected work locations</Card.Subtitle>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"links\">\r\n                        <Card style={{ minHeight: '175px'}}>\r\n                            <Card.Body>\r\n                                <Card.Title><Link to=\"/\" className=\"btn btn-info btn-lg links-btn\"> SOCIAL </Link></Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">Create, view, and interact with posts from your coworkers</Card.Subtitle>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"links\">\r\n                        <Card style={{ minHeight: '175px'}}>\r\n                            <Card.Body>\r\n                                <Card.Title><Link to=\"/\" className=\"btn btn-info btn-lg links-btn\"> MAIL </Link></Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">Manage your in-person mail</Card.Subtitle>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\serviceWorker.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\routes.js",["90","91"],"import React from 'react';\r\nimport App from './App';\r\nimport User from './pages/User'\r\nimport {Route, Switch, Redirect, Link} from 'react-router-dom';\r\nimport Booking from \"./pages/Booking\";\r\nimport {AdminBooking} from \"./pages/AdminBooking\";\r\nimport store from \"./store\";\r\nimport {getUserInfo} from \"./reducers/userSlice\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nexport const Routes = (props) => {\r\n    props.getUserInfo()\r\n    return (\r\n        <\r\n            div>\r\n            {\r\n                store.getState().user.isLoggedIn ?\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            < App/>\r\n                        </Route>\r\n                        <Route exact path=\"/user\">\r\n                            < User/>\r\n                        </Route>\r\n                        <Route exact path=\"/booking\">\r\n                            < Booking/>\r\n                        </Route>\r\n                        <Route exact path=\"/admin/booking\">\r\n                            < AdminBooking/>\r\n                        </Route>\r\n                    </Switch>\r\n                    :\r\n                    <span>Please <a href=\"https://beeware319.herokuapp.com\"> Login </a></span>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        getUserInfo: () => dispatch(getUserInfo()),\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Routes);","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\reducers\\rootReducer.js",["92"],"import { combineReducers } from 'redux';\r\nimport counterReducer from './counterSlice';\r\nimport userReducer from './userSlice'\r\n\r\nconst appReducer = combineReducers({\r\n    user: userReducer\r\n});\r\n\r\n// reset entire state on logout\r\nexport const rootReducer = (state, action) => {\r\n    if (action.type === \"user/logout\") {\r\n        state = undefined\r\n    }\r\n    return appReducer(state, action)\r\n};\r\n\r\nexport default rootReducer\r\n\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\pages\\AdminBooking.js",["93","94","95","96","97","98"],"import React, {Component} from 'react';\r\nimport {useDispatch, useSelector, connect} from 'react-redux';\r\nimport NavigationBar from \"../components/NavigationBar\";\r\nimport styles from './User.page.css'\r\nimport {FloorSummaryModal} from \"../components/FloorSummaryModal\";\r\nimport {UpdateLocationModal} from \"../components/UpdateLocationModal\";\r\nimport style from \"./AdminBooking.page.css\"\r\nimport {AddLocationModal} from \"../components/AddLocationModal\";\r\n\r\nexport class AdminBooking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                < NavigationBar/>\r\n\r\n                <h2> ADMIN BOOKING ACTIONS </h2>\r\n                <div className=\"admin-modal-container\">\r\n                    <FloorSummaryModal />\r\n                    <UpdateLocationModal />\r\n                    <AddLocationModal />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\pages\\User.js",["99","100","101"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport NavigationBar from \"../components/NavigationBar\";\r\nimport styles from './User.page.css'\r\n\r\nexport class User extends Component {\r\n    render() {\r\n        const username = this.props.username\r\n        const isLoggedIn = this.props.isLoggedIn\r\n        return (\r\n            <div>\r\n                < NavigationBar/>\r\n                <div>\r\n                    <h2> Welcome {this.props.fName} {this.props.lName} </h2>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {user} = state\r\n    return {username: user.username, isLoggedIn: user.isLoggedIn, isAdmin: user.isAdmin, fName: user.fName, lName: user.lName}\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(User);\r\n\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\reducers\\userSlice.js",["102"],"import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport client from '../api'\r\nimport {roles} from \"../constants\";\r\nimport axios from \"axios\";\r\n\r\nexport const getUserInfo = createAsyncThunk(\r\n    'user/getInfo',\r\n    async () => {\r\n        const response = await client.getUserInfo()\r\n        return response.data\r\n    }\r\n)\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        isLoggedIn: false,\r\n        isAdmin: false,\r\n        username: \"\",\r\n        fName: \"\",\r\n        lName: \"\",\r\n        email: \"\"\r\n    },\r\n    reducers: {\r\n    },\r\n    // Reducers for after async thunk actions are fulfilled\r\n    extraReducers: {\r\n        [getUserInfo.fulfilled]: (state, action) => {\r\n            state.isLoggedIn = action.payload.authenticated\r\n            state.isAdmin = action.payload.principal.idToken.claims.roles.includes(roles.admin)\r\n            state.username = action.payload.name\r\n            state.fName = action.payload.principal.givenName\r\n            state.lName = action.payload.principal.familyName\r\n            state.email = action.payload.principal.attributes.unique_name\r\n        },\r\n    }\r\n});\r\n\r\nexport default userSlice.reducer;\r\n\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\components\\NavigationBar.js",["103"],"import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport styles from \"./NavigationBar.css\"\r\n\r\nexport class NavigationBar extends Component {\r\n    renderUserNav() {\r\n        return (\r\n            <NavDropdown title={this.props.username} id=\"basic-nav-dropdown\" >\r\n                <Nav.Link as={Link} to=\"/user\">Profile</Nav.Link>\r\n                <a href=\"https://beeware319.herokuapp.com/logout\">Logout</a>\r\n            </NavDropdown>\r\n        )\r\n    }\r\n\r\n    renderAdminNav() {\r\n        return (\r\n            <NavDropdown title=\"Admin\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item as={Link} to=\"/admin/booking\">Manage Bookings</NavDropdown.Item>\r\n                <NavDropdown.Item as={Link} to=\"/\">Manage Social</NavDropdown.Item>\r\n                <NavDropdown.Item as={Link} to=\"/\">Manage Mail Requests</NavDropdown.Item>\r\n            </NavDropdown>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        // this is just a sample, using bootstrap react, change as needed\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand as={Link} to=\"/\">Pandemic Pal</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        {/*fill in links when needed*/}\r\n                        <Nav.Link as={Link} to=\"/booking\">Booking System</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/\">Social</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/\">Mail Management</Nav.Link>\r\n                        {this.props.isAdmin\r\n                        ? this.renderAdminNav()\r\n                        : \"\"}\r\n                    </Nav>\r\n                    {this.props.isLoggedIn\r\n                        ? this.renderUserNav()\r\n                        : <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>}\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const {user} = state\r\n    return {username: user.username, isLoggedIn: user.isLoggedIn, isAdmin: user.isAdmin, fName: user.fName, lName: user.lName}\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(NavigationBar);","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\pages\\Booking.js",["104","105","106","107","108","109"],"import React, {Component} from 'react';\r\nimport {useDispatch, useSelector, connect} from 'react-redux';\r\nimport NavigationBar from \"../components/NavigationBar\";\r\nimport styles from './User.page.css'\r\nimport {FloorSummaryModal} from \"../components/FloorSummaryModal\";\r\nimport {UpdateLocationModal} from \"../components/UpdateLocationModal\";\r\n\r\nexport class Booking extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                < NavigationBar/>\r\n                <div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const {user} = state\r\n    return {uid: user.uid, isLoggedIn: user.isLoggedIn}\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Booking);\r\n\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\components\\FloorSummaryModal.js",["110","111","112","113","114"],"import React, {Component} from \"react\";\r\nimport {Button, Modal, Form, Navbar, NavDropdown, Table} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport client from \"../api\";\r\nimport {forEach} from \"react-bootstrap/ElementChildren\";\r\n\r\nexport class FloorSummaryModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {show: false, date: \"\", buildings: [], floors: []}\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({show: false})\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({show: true})\r\n    }\r\n\r\n    handleDateChange = (e) => {\r\n        this.setState({date: e.target.value})\r\n    }\r\n\r\n    handleBuildingChange = (e) => {\r\n        const selectedIndex = e.target.options.selectedIndex;\r\n        let buildingId = e.target.options[selectedIndex].getAttribute('data-key')\r\n        client.getFloors({buildingId}).then(res => {\r\n            this.setState({floors: res.data})\r\n        }).then(() => {\r\n            let temp = []\r\n            this.state.floors.forEach(floor => {\r\n                client.getFloorInfo(floor.id, this.state.date).then(res => {\r\n                    floor = {...floor, occupied: res.data.occupiedDesks, total: res.data.totalDesks}\r\n                    temp.push(floor)\r\n                    this.setState({floors: temp})\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        client.getBuildings().then(res => {\r\n            this.setState({buildings: res.data})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // this is just a sample, using bootstrap react, change as needed\r\n        return (\r\n            <div className=\"admin-modal\">\r\n                <button className=\"btn btn-info\" onClick={this.handleOpen}> View Bookings Summary</button>\r\n                <Modal show={this.state.show} onHide={this.handleClose} size=\"lg\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Booking Summary</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group controlId=\"formDate\" xs=\"1\">\r\n                            <Form.Label column>\r\n                                Date\r\n                            </Form.Label>\r\n                            <Form.Control onChange={this.handleDateChange}\r\n                                          type=\"date\"\r\n                                          name=\"date\"\r\n                                          placeholder=\"Date\"\r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"modalSummary.buildingSelect\">\r\n                            <Form.Label>Select a building</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={this.handleBuildingChange}>\r\n\r\n                                <option disabled selected value> -- select one --</option>\r\n                                {this.state.buildings.map((building) =>\r\n                                    <option key={building.id} data-key={building.id}>\r\n                                        {building.name} </option>\r\n                                )}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Table bordered>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>Floor No.</th>\r\n                                <th>Occupied Desks</th>\r\n                                <th>Total Desks</th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {this.state.floors.map((floor, index) =>\r\n                                    <tr>\r\n                                        <td>{floor.floorNumber}</td>\r\n                                        <td>{floor.occupied}</td>\r\n                                        <td>{floor.total}</td>\r\n                                    </tr>\r\n                            )}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\reducers\\counterSlice.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\constants.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\components\\AddLocationModal.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\components\\UpdateLocationModal.js",["115","116","117","118","119","120","121","122"],"import React, {Component} from \"react\";\r\nimport {Button, Modal, Form, Navbar, NavDropdown, Table, Col, Container, Accordion, Card} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport client from \"../api\";\r\nimport {forEach} from \"react-bootstrap/ElementChildren\";\r\nimport {Row} from \"react-bootstrap\";\r\n\r\nexport class UpdateLocationModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {show: false, date: \"\", buildings: [], floors: [], desks: {}}\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({show: false})\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({show: true})\r\n    }\r\n\r\n\r\n    updateDesks = (e, floorId) => {\r\n        let desks = this.state.desks\r\n        desks[floorId] = e.target.value\r\n        this.setState({desks: desks})\r\n    }\r\n\r\n    updateFloors = (e, floorId) => {\r\n        e.preventDefault()\r\n        // TODO: make http request to update the desks\r\n        // client.updateDesks({floorId, desks: this.state.desks[floorId]})\r\n    }\r\n\r\n    handleBuildingChange = (e) => {\r\n        const selectedIndex = e.target.options.selectedIndex;\r\n        let buildingId = e.target.options[selectedIndex].getAttribute('data-key')\r\n        client.getFloors({buildingId}).then(res => {\r\n            this.setState({floors: res.data})\r\n        }).then(() => {\r\n            let temp = {}\r\n            this.state.floors.forEach(floor => {\r\n                client.getDesks(floor.id).then(res => {\r\n                    let temp2 = []\r\n                    res.data.forEach(desk => {\r\n                        temp2.push(desk.deskNumber)\r\n                    })\r\n                    temp[floor.id] = temp2.join(\", \")\r\n                    this.setState({desks: temp})\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        client.getBuildings().then(res => {\r\n            this.setState({buildings: res.data})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // this is just a sample, using bootstrap react, change as needed\r\n        return (\r\n            <div className=\"admin-modal\">\r\n                <button className=\"btn btn-info\" onClick={this.handleOpen}> Update Locations</button>\r\n                <Modal show={this.state.show} onHide={this.handleClose} size=\"lg\" scrollable={true}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group controlId=\"modalSummary.buildingSelect\">\r\n                            <Form.Label>Select a building</Form.Label>\r\n                            <Form.Control as=\"select\" onChange={this.handleBuildingChange}>\r\n                                <option disabled selected value> -- select one --</option>\r\n                                {this.state.buildings.map((building) =>\r\n                                    <option key={building.id} data-key={building.id}>\r\n                                        {building.name} </option>\r\n                                )}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Accordion>\r\n                            {this.state.floors.map((floor, index) =>\r\n                                <Card>\r\n                                    <Card.Header>\r\n                                        <Accordion.Toggle as={Button} variant=\"link\" eventKey={floor.id}>\r\n                                            Floor {floor.floorNumber}\r\n                                        </Accordion.Toggle>\r\n                                    </Card.Header>\r\n                                    <Accordion.Collapse eventKey={floor.id}>\r\n                                        <Card.Body>\r\n                                            <Form.Group as={Col}>\r\n                                                <Form.Control as=\"textarea\"\r\n                                                              onChange={(e) => {\r\n                                                                  this.updateDesks(e, floor.id)\r\n                                                              }} rows={5} key={floor.id}\r\n                                                              defaultValue={this.state.desks[floor.id]}/>\r\n                                            </Form.Group>\r\n\r\n                                            <Button onClick={(e) => {\r\n                                                this.updateFloors(e, floor.id)\r\n                                            }} type=\"submit\" className=\"mb-2\">\r\n                                                Update\r\n                                            </Button>\r\n                                        </Card.Body>\r\n                                    </Accordion.Collapse>\r\n                                </Card>\r\n                            )}\r\n\r\n                        </Accordion>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\roy97\\IdeaProjects\\beeware319-front\\src\\api.js",["123"],"import axios from \"axios\";\r\nimport { baseUrl} from \"./constants\";\r\n\r\nexport default class client {\r\n    static async getBuildings() {\r\n        try {\r\n            const response = axios.get(\"/building/all\");\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n    static async getBuilding(id) {\r\n        try {\r\n            const response = axios.get(\"/building\", {params: {id}} );\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async addBuilding({name, address}) {\r\n        try {\r\n            const response = axios.post(\"/building\", {name, address});\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async updateBuilding({id, name, address}) {\r\n        try {\r\n            const response = axios.put(\"/building\", {id, name, address});\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async deleteBuilding(id) {\r\n        try {\r\n            const response = axios.delete(\"/building\", id);\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async getFloors({buildingId}) {\r\n        try {\r\n            const response = axios.get(\"/floor\", {params: {buildingId}})\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async getFloorInfo(floorID, date) {\r\n        try {\r\n            const response = axios.get(\"/floor/info\", {params: {id: floorID, date: date}})\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async addFloor({floorNumber, buildingId, deskIds}) {\r\n        try {\r\n            const response = axios.post(\"/floor\", {floorNumber, buildingId, deskIds});\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async updateFloor({id, floorNumber, buildingId}) {\r\n        try {\r\n            const response = axios.put(\"/floor\", {id, floorNumber, buildingId});\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async deleteFloor(id) {\r\n        try {\r\n            const response = axios.delete(\"/floor\", id);\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async getDesks(floorID) {\r\n        try {\r\n            const response = axios.get(\"/desk\", {params: {floorId: floorID}})\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async makeBooking({employeeId, deskId, date}) {\r\n        try {\r\n            const response = axios.post(\"/booking\", {employeeId, deskId, date});\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async updateBooking({id, deskId, employeeId, date}) {\r\n        try {\r\n            const response = axios.put(\"/booking\", {id, deskId, employeeId, date});\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async updateDesks({id, deskId, employeeId, date}) {\r\n        try {\r\n            const response = axios.put(\"/booking\", {id, deskId, employeeId, date});\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async deleteBooking({id}) {\r\n        try {\r\n            const response = axios.delete(\"/booking\", {id});\r\n            return response\r\n        } catch (e) {\r\n            console.log(e.message())\r\n        }\r\n    }\r\n\r\n    static async getUserInfo() {\r\n        const response = await axios.get(\"/user/userinfo\", {withCredentials: true})\r\n        return response\r\n    }\r\n\r\n    static async logout() {\r\n        // stub, should put axios request here\r\n        return Promise.resolve({\r\n            data: {}\r\n        })\r\n    }\r\n}\r\n",{"ruleId":"124","severity":1,"message":"125","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":11},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"124","severity":1,"message":"132","line":1,"column":9,"nodeType":"126","messageId":"127","endLine":1,"endColumn":23},{"ruleId":"124","severity":1,"message":"133","line":3,"column":8,"nodeType":"126","messageId":"127","endLine":3,"endColumn":12},{"ruleId":"124","severity":1,"message":"134","line":6,"column":8,"nodeType":"126","messageId":"127","endLine":6,"endColumn":13},{"ruleId":"124","severity":1,"message":"135","line":4,"column":24,"nodeType":"126","messageId":"127","endLine":4,"endColumn":32},{"ruleId":"124","severity":1,"message":"136","line":4,"column":34,"nodeType":"126","messageId":"127","endLine":4,"endColumn":38},{"ruleId":"124","severity":1,"message":"137","line":2,"column":8,"nodeType":"126","messageId":"127","endLine":2,"endColumn":22},{"ruleId":"124","severity":1,"message":"138","line":2,"column":9,"nodeType":"126","messageId":"127","endLine":2,"endColumn":20},{"ruleId":"124","severity":1,"message":"139","line":2,"column":22,"nodeType":"126","messageId":"127","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"140","line":2,"column":35,"nodeType":"126","messageId":"127","endLine":2,"endColumn":42},{"ruleId":"124","severity":1,"message":"141","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"142","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":13},{"ruleId":"143","severity":1,"message":"144","line":11,"column":5,"nodeType":"145","messageId":"146","endLine":13,"endColumn":6},{"ruleId":"124","severity":1,"message":"141","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"147","line":8,"column":15,"nodeType":"126","messageId":"127","endLine":8,"endColumn":23},{"ruleId":"124","severity":1,"message":"148","line":9,"column":15,"nodeType":"126","messageId":"127","endLine":9,"endColumn":25},{"ruleId":"124","severity":1,"message":"149","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":13},{"ruleId":"124","severity":1,"message":"141","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":14},{"ruleId":"124","severity":1,"message":"138","line":2,"column":9,"nodeType":"126","messageId":"127","endLine":2,"endColumn":20},{"ruleId":"124","severity":1,"message":"139","line":2,"column":22,"nodeType":"126","messageId":"127","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"141","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":14},{"ruleId":"124","severity":1,"message":"150","line":5,"column":9,"nodeType":"126","messageId":"127","endLine":5,"endColumn":26},{"ruleId":"124","severity":1,"message":"151","line":6,"column":9,"nodeType":"126","messageId":"127","endLine":6,"endColumn":28},{"ruleId":"143","severity":1,"message":"144","line":9,"column":5,"nodeType":"145","messageId":"146","endLine":11,"endColumn":6},{"ruleId":"124","severity":1,"message":"152","line":2,"column":30,"nodeType":"126","messageId":"127","endLine":2,"endColumn":36},{"ruleId":"124","severity":1,"message":"153","line":2,"column":38,"nodeType":"126","messageId":"127","endLine":2,"endColumn":49},{"ruleId":"124","severity":1,"message":"136","line":3,"column":9,"nodeType":"126","messageId":"127","endLine":3,"endColumn":13},{"ruleId":"124","severity":1,"message":"140","line":4,"column":9,"nodeType":"126","messageId":"127","endLine":4,"endColumn":16},{"ruleId":"124","severity":1,"message":"154","line":6,"column":9,"nodeType":"126","messageId":"127","endLine":6,"endColumn":16},{"ruleId":"124","severity":1,"message":"152","line":2,"column":30,"nodeType":"126","messageId":"127","endLine":2,"endColumn":36},{"ruleId":"124","severity":1,"message":"153","line":2,"column":38,"nodeType":"126","messageId":"127","endLine":2,"endColumn":49},{"ruleId":"124","severity":1,"message":"155","line":2,"column":51,"nodeType":"126","messageId":"127","endLine":2,"endColumn":56},{"ruleId":"124","severity":1,"message":"156","line":2,"column":63,"nodeType":"126","messageId":"127","endLine":2,"endColumn":72},{"ruleId":"124","severity":1,"message":"136","line":3,"column":9,"nodeType":"126","messageId":"127","endLine":3,"endColumn":13},{"ruleId":"124","severity":1,"message":"140","line":4,"column":9,"nodeType":"126","messageId":"127","endLine":4,"endColumn":16},{"ruleId":"124","severity":1,"message":"154","line":6,"column":9,"nodeType":"126","messageId":"127","endLine":6,"endColumn":16},{"ruleId":"124","severity":1,"message":"157","line":7,"column":9,"nodeType":"126","messageId":"127","endLine":7,"endColumn":12},{"ruleId":"124","severity":1,"message":"158","line":2,"column":10,"nodeType":"126","messageId":"127","endLine":2,"endColumn":17},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["159"],"no-negated-in-lhs",["160"],"'configureStore' is defined but never used.","'User' is defined but never used.","'store' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'counterReducer' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'connect' is defined but never used.","'styles' is defined but never used.","'style' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'username' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.","'axios' is defined but never used.","'FloorSummaryModal' is defined but never used.","'UpdateLocationModal' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'forEach' is defined but never used.","'Table' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'baseUrl' is defined but never used.","no-global-assign","no-unsafe-negation"]