[{"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\index.js":"1","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\store.js":"2","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\serviceWorker.js":"3","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\routes.js":"4","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\Auth\\authProvider.js":"5","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\App.js":"6","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\reducers\\rootReducer.js":"7","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Booking Module\\User.js":"8","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\API\\api.js":"9","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Booking Module\\Booking.js":"10","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Social Module\\AdminSocial.js":"11","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Booking Module\\AdminBooking.js":"12","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Social Module\\Social.js":"13","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Booking Module\\ViewBookings.js":"14","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Mail Module\\Mail.js":"15","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Mail Module\\AdminMail.js":"16","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\reducers\\userSlice.js":"17","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\reducers\\authReducer.js":"18","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\reducers\\errorReducer.js":"19","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\API\\user-api.js":"20","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\API\\social-api.js":"21","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\API\\mail-api.js":"22","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\API\\booking-api.js":"23","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\General\\NavigationBar.js":"24","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Booking Module\\BookLocationForm.js":"25","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Booking Module\\FloorSummaryModal.js":"26","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Booking Module\\UpdateLocationModal.js":"27","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Booking Module\\ManageBookingsForm.js":"28","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\EmployeeViewWindow.js":"29","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Booking Module\\AddLocationModal.js":"30","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Mail Module\\ViewRequests.js":"31","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\AddTopicModal.js":"32","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Mail Module\\AddMailModal.js":"33","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\constants.js":"34","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\helpers.js":"35","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\EventBus.js":"36","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Mail Module\\MailRequestModal.js":"37","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\EmployeeSidebar.js":"38","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\ViewNotifications.js":"39","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\ViewTopics.js":"40","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\ViewPosts.js":"41","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\AddPostModal.js":"42","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\Post.js":"43"},{"size":1041,"mtime":1617715253499,"results":"44","hashOfConfig":"45"},{"size":362,"mtime":1617715253512,"results":"46","hashOfConfig":"45"},{"size":5141,"mtime":1617715253511,"results":"47","hashOfConfig":"45"},{"size":2052,"mtime":1617715253510,"results":"48","hashOfConfig":"45"},{"size":923,"mtime":1617735142040,"results":"49","hashOfConfig":"45"},{"size":2176,"mtime":1617715253478,"results":"50","hashOfConfig":"45"},{"size":522,"mtime":1617715253509,"results":"51","hashOfConfig":"45"},{"size":686,"mtime":1617715253502,"results":"52","hashOfConfig":"45"},{"size":326,"mtime":1617715253472,"results":"53","hashOfConfig":"45"},{"size":506,"mtime":1617715253501,"results":"54","hashOfConfig":"45"},{"size":536,"mtime":1617715253505,"results":"55","hashOfConfig":"45"},{"size":851,"mtime":1617715253500,"results":"56","hashOfConfig":"45"},{"size":771,"mtime":1617715253506,"results":"57","hashOfConfig":"45"},{"size":415,"mtime":1617715253502,"results":"58","hashOfConfig":"45"},{"size":652,"mtime":1617715253504,"results":"59","hashOfConfig":"45"},{"size":776,"mtime":1617715253504,"results":"60","hashOfConfig":"45"},{"size":1286,"mtime":1617715253509,"results":"61","hashOfConfig":"45"},{"size":2511,"mtime":1617715253507,"results":"62","hashOfConfig":"45"},{"size":471,"mtime":1617715253508,"results":"63","hashOfConfig":"45"},{"size":1776,"mtime":1617715253477,"results":"64","hashOfConfig":"45"},{"size":11621,"mtime":1617725285035,"results":"65","hashOfConfig":"45"},{"size":4062,"mtime":1617725506435,"results":"66","hashOfConfig":"45"},{"size":9086,"mtime":1617725808168,"results":"67","hashOfConfig":"45"},{"size":2539,"mtime":1617715253488,"results":"68","hashOfConfig":"45"},{"size":11153,"mtime":1617715253483,"results":"69","hashOfConfig":"45"},{"size":5174,"mtime":1617715253484,"results":"70","hashOfConfig":"45"},{"size":13881,"mtime":1617715253486,"results":"71","hashOfConfig":"45"},{"size":4573,"mtime":1617715253485,"results":"72","hashOfConfig":"45"},{"size":1179,"mtime":1617715253493,"results":"73","hashOfConfig":"45"},{"size":3579,"mtime":1617715253482,"results":"74","hashOfConfig":"45"},{"size":8377,"mtime":1617715253490,"results":"75","hashOfConfig":"45"},{"size":4506,"mtime":1617715253492,"results":"76","hashOfConfig":"45"},{"size":6510,"mtime":1617715253489,"results":"77","hashOfConfig":"45"},{"size":1249,"mtime":1617735142042,"results":"78","hashOfConfig":"45"},{"size":1288,"mtime":1617715253497,"results":"79","hashOfConfig":"45"},{"size":365,"mtime":1617715253480,"results":"80","hashOfConfig":"45"},{"size":6905,"mtime":1617715253490,"results":"81","hashOfConfig":"45"},{"size":1382,"mtime":1617715253493,"results":"82","hashOfConfig":"45"},{"size":4008,"mtime":1617715253495,"results":"83","hashOfConfig":"45"},{"size":6066,"mtime":1617715253496,"results":"84","hashOfConfig":"45"},{"size":1742,"mtime":1617715253495,"results":"85","hashOfConfig":"45"},{"size":5965,"mtime":1617715253491,"results":"86","hashOfConfig":"45"},{"size":2678,"mtime":1617715253494,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"y9ymzw",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"90"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\index.js",[],["186","187"],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\store.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\serviceWorker.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\routes.js",["188"],"import React, {useEffect} from 'react';\r\nimport App from './App';\r\nimport User from './pages/Booking Module/User'\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport Booking from \"./pages/Booking Module/Booking\";\r\nimport Social from \"./pages/Social Module/Social\";\r\nimport {AdminBooking} from \"./pages/Booking Module/AdminBooking\";\r\nimport {connect} from \"react-redux\";\r\nimport ViewBookings from \"./pages/Booking Module/ViewBookings\";\r\nimport \"./App.css\"\r\nimport {AdminSocial} from \"./pages/Social Module/AdminSocial\";\r\nimport ManageRequests from \"./pages/Mail Module/Mail\";\r\nimport AdminMail from \"./pages/Mail Module/AdminMail\";\r\n\r\nexport const Routes = (props) => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    < App/>\r\n                </Route>\r\n                <Route exact path=\"/user\">\r\n                    < User/>\r\n                </Route>\r\n                <Route exact path=\"/booking\">\r\n                    < Booking/>\r\n                </Route>\r\n                <Route exact path=\"/mybookings\">\r\n                    < ViewBookings/>\r\n                </Route>\r\n                <Route exact path=\"/social\">\r\n                    < Social/>\r\n                </Route>\r\n                <Route exact path=\"/mail\">\r\n                    < ManageRequests />\r\n                </Route>\r\n            </Switch>\r\n            {props.isAdmin &&\r\n                <Switch>\r\n                    <Route exact path=\"/admin/booking\">\r\n                        < AdminBooking/>\r\n                    </Route>\r\n                    <Route exact path=\"/admin/social\">\r\n                        < AdminSocial/>\r\n                    </Route>\r\n                    <Route exact path=\"/admin/mail\">\r\n                        < AdminMail />\r\n                    </Route>\r\n                </Switch>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n;\r\nfunction mapStateToProps(state) {\r\n    const {auth} = state\r\n    return {isAdmin: auth.isAdmin}\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\nnull\r\n)(Routes);","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\Auth\\authProvider.js",["189"],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\App.js",["190","191"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport React from 'react';\r\nimport './App.css';\r\nimport NavigationBar from \"./components/General/NavigationBar\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button, Card} from \"react-bootstrap\";\r\nimport client from \"./API/api\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            < NavigationBar/>\r\n            <div className=\"heading\">\r\n                <h1> WELCOME TO PANDEMIC PAL </h1>\r\n                <div className=\"links-container\">\r\n                    <div className=\"links\">\r\n                        <Card style={{ minHeight: '175px'}}>\r\n                            <Card.Body>\r\n                                <Card.Title><Link to=\"/booking\" className=\"btn btn-info btn-lg links-btn\"> BOOKINGS </Link></Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">Manage and book your expected work locations</Card.Subtitle>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"links\">\r\n                        <Card style={{ minHeight: '175px'}}>\r\n                            <Card.Body>\r\n                                <Card.Title><Link to=\"/social\" className=\"btn btn-info btn-lg links-btn\"> SOCIAL </Link></Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">Create, view, and interact with posts from your coworkers</Card.Subtitle>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"links\">\r\n                        <Card style={{ minHeight: '175px'}}>\r\n                            <Card.Body>\r\n                                <Card.Title><Link to=\"/mail\" className=\"btn btn-info btn-lg links-btn\"> MAIL </Link></Card.Title>\r\n                                <Card.Subtitle className=\"mb-2 text-muted\">Manage your in-person mail</Card.Subtitle>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\reducers\\rootReducer.js",["192"],"import { combineReducers } from 'redux';\r\nimport userReducer from './userSlice'\r\nimport errorReducer from \"./errorReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nconst appReducer = combineReducers({\r\n    // user: userReducer,\r\n    error: errorReducer,\r\n    auth: authReducer\r\n});\r\n\r\n// reset entire state on logout\r\nexport const rootReducer = (state, action) => {\r\n    if (action.type === \"user/logout\") {\r\n        state = undefined\r\n    }\r\n    return appReducer(state, action)\r\n};\r\n\r\nexport default rootReducer\r\n\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Booking Module\\User.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\API\\api.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Booking Module\\Booking.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Social Module\\AdminSocial.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Booking Module\\AdminBooking.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Social Module\\Social.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Booking Module\\ViewBookings.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Mail Module\\Mail.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\pages\\Mail Module\\AdminMail.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\reducers\\userSlice.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\reducers\\authReducer.js",["193","194"],"import { createStore } from '@reduxjs/toolkit';\r\nimport { AuthenticationActions, AuthenticationState } from 'react-aad-msal';\r\nimport {authProvider} from \"../Auth/authProvider\";\r\nimport {roles} from \"../constants\";\r\nimport client from \"../API/api\";\r\n\r\nconst initialState = {\r\n    initializing: false,\r\n    initialized: false,\r\n    idToken: null,\r\n    accessToken: null,\r\n    state: AuthenticationState.Unauthenticated,\r\n    name: null,\r\n    isAdmin: false,\r\n    email: \"\"\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"auth/logout\":\r\n            authProvider.logout();\r\n        case AuthenticationActions.Initializing:\r\n            return {\r\n                ...state,\r\n                initializing: true,\r\n                initialized: false,\r\n            };\r\n        case AuthenticationActions.Initialized:\r\n            return {\r\n                ...state,\r\n                initializing: false,\r\n                initialized: true,\r\n            };\r\n        case AuthenticationActions.AcquiredIdTokenSuccess:\r\n            client.user.getAccessToken()\r\n            return {\r\n                ...state,\r\n                idToken: action.payload.idToken.rawIdToken,\r\n                name: action.payload.idToken.name,\r\n                email: action.payload.idToken.preferredName,\r\n                isAdmin: action.payload.idToken.claims.roles && action.payload.idToken.claims.roles.includes(roles.admin)\r\n            };\r\n        case AuthenticationActions.AcquiredAccessTokenSuccess:\r\n            return {\r\n                ...state,\r\n                accessToken: action.payload,\r\n            };\r\n        case AuthenticationActions.AcquiredAccessTokenError:\r\n            return {\r\n                ...state,\r\n                accessToken: null,\r\n            };\r\n        case AuthenticationActions.LoginSuccess:\r\n            return {\r\n                ...state,\r\n                account: action.payload.account,\r\n            };\r\n        case AuthenticationActions.LoginError:\r\n        case AuthenticationActions.AcquiredIdTokenError:\r\n        case AuthenticationActions.LogoutSuccess:\r\n            return { ...state, idToken: null, accessToken: null, account: null, isAdmin: false, username: null, name: null };\r\n        case AuthenticationActions.AuthenticatedStateChanged:\r\n            return {\r\n                ...state,\r\n                state: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\reducers\\errorReducer.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\API\\user-api.js",["195","196"],"import {authProvider} from \"../Auth/authProvider\";\r\nimport store from \"../store\";\r\nimport {AuthenticationActions} from \"react-aad-msal\";\r\nimport axios from \"axios\";\r\nimport {InteractionRequiredAuthError} from \"msal\";\r\n\r\nexport default class userClient {\r\n    static getAccessToken() {\r\n        let request = {\r\n            scopes: [\"User.ReadBasic.All\"]\r\n        };\r\n        authProvider.acquireTokenSilent(request).then(accessToken => {\r\n            store.dispatch({type: AuthenticationActions.AcquiredAccessTokenSuccess, payload: accessToken.accessToken})\r\n        }).catch(e => {\r\n            if (e instanceof InteractionRequiredAuthError) {\r\n                authProvider.acquireTokenPopup(request).then(accessToken => {\r\n                    store.dispatch({type: AuthenticationActions.AcquiredAccessTokenSuccess, payload: accessToken.accessToken})\r\n                }).catch(e => {\r\n                    console.log(e)\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    static async getAllUsers() {\r\n\r\n        let accessToken =  store.getState().auth.accessToken\r\n        try {\r\n            let res = await axios.get(\"https://graph.microsoft.com/v1.0/users\", {headers: {Authorization: `Bearer ${accessToken}`}})\r\n            return res.data.value\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    static async getUserByEmail(email) {\r\n        let accessToken =  store.getState().auth.accessToken\r\n        try {\r\n            let res = await axios.get(\"https://graph.microsoft.com/v1.0/users\", {headers: {Authorization: `Bearer ${accessToken}`},\r\n                params:{$filter: `startswith(userPrincipalName,\\'${email}\\')`}})\r\n            return res.data.value\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\API\\social-api.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\API\\mail-api.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\API\\booking-api.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\General\\NavigationBar.js",["197","198"],"import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {Button, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport \"./NavigationBar.css\"\r\n\r\nexport class NavigationBar extends Component {\r\n    renderUserNav() {\r\n        return (\r\n            <NavDropdown title={this.props.name} id=\"basic-nav-dropdown\" >\r\n                <Nav.Link as={Link} to=\"/user\">Profile</Nav.Link>\r\n                <a href=\"#\" onClick={this.props.logout}> Logout </a>\r\n            </NavDropdown>\r\n        )\r\n    }\r\n\r\n    renderAdminNav() {\r\n        return (\r\n            <NavDropdown title=\"Admin\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item as={Link} to=\"/admin/booking\">Manage Bookings</NavDropdown.Item>\r\n                <NavDropdown.Item as={Link} to=\"/admin/social\">Manage Social</NavDropdown.Item>\r\n                <NavDropdown.Item as={Link} to=\"/admin/mail\">Manage Mail Requests</NavDropdown.Item>\r\n            </NavDropdown>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        // this is just a sample, using bootstrap react, change as needed\r\n        return (\r\n            <Navbar bg=\"light\" expand=\"lg\">\r\n                <Navbar.Brand as={Link} to=\"/\">Pandemic Pal</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <NavDropdown title=\"Booking\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item as={Link} to=\"/booking\">Make Booking</NavDropdown.Item>\r\n                            <NavDropdown.Item as={Link} to=\"/mybookings\">My Bookings</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        <Nav.Link as={Link} to=\"/social\">Social</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/mail\">Manage Mail/Requests</Nav.Link>\r\n                        {this.props.isAdmin\r\n                        ?this.renderAdminNav()\r\n                        : \"\"}\r\n                    </Nav>\r\n                    {this.renderUserNav()}\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch({type: 'auth/logout'}),\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {auth} = state\r\n    return {name: auth.name, isAdmin: auth.isAdmin, email: auth.email}\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(NavigationBar);","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Booking Module\\BookLocationForm.js",["199","200","201"],"import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Form, Button, Row, Col, Container, Figure, Modal, ModalFooter, FormGroup, Image} from \"react-bootstrap\";\r\nimport moment from 'moment'\r\nimport {dateFormat} from \"../../constants\";\r\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport 'react-dates/initialize';\r\nimport {DateRangePicker} from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport client from \"../../API/api\";\r\nimport {isInclusivelyAfterDay, isInclusivelyBeforeDay} from \"../../helpers\"\r\n\r\n\r\nexport class BookLocationForm extends Component {\r\n    initialState = {\r\n        buildingId: null, floorId: null, desk: null, availableDesks: [], buildings: [], floors: [],\r\n        floorImage: \"\", startDate: null, endDate: null\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = JSON.parse((JSON.stringify(this.initialState)))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBuildings()\r\n    }\r\n\r\n    getBuildings = () => {\r\n        client.booking.getBuildings().then(res => {\r\n            const buildings = res.data\r\n            this.setState({buildings: buildings}, this.getFloors)\r\n            if (buildings.length > 0) {\r\n                this.setState({buildingId: buildings[0].id})\r\n            }\r\n        })\r\n    }\r\n\r\n    formatDate = (date) => {\r\n        let dateMoment = moment(date)\r\n        return moment(dateMoment._d).format(dateFormat)\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!this.state.startDate || !this.state.buildingId || !this.state.floorId || !this.state.desk) {\r\n            NotificationManager.warning(\"Please complete all fields\", \"\", 2000)\r\n            return;\r\n        }\r\n        let startDateMoment = moment(this.state.startDate)\r\n        let endDateMoment = moment(this.state.endDate)\r\n        let range\r\n        if (!this.state.endDate) {\r\n            range = 1\r\n        } else {\r\n            range = endDateMoment.diff(startDateMoment, \"days\") + 1\r\n        }\r\n        const payload = {\r\n            email: this.props.email,\r\n            deskId: this.state.desk.id,\r\n            date: this.formatDate(this.state.startDate),\r\n            range: 1\r\n        }\r\n        for (let i = 0; i < range; i++) {\r\n            payload.date = moment(this.state.startDate).add(i, 'days').format(dateFormat)\r\n            client.booking.makeBooking(payload).then(res => {\r\n                NotificationManager.success(\"Booking successful\", \"\", 2000)\r\n                this.setState(JSON.parse((JSON.stringify(this.initialState))), this.getBuildings)\r\n            })\r\n        }\r\n    }\r\n\r\n    setDates = ({startDate, endDate}) => {\r\n        this.setState({startDate: startDate, endDate: endDate}, this.getDesks)\r\n    }\r\n\r\n    setLocationCode = (e) => {\r\n        this.setState({locationCode: e.target.value})\r\n    }\r\n\r\n    setBuilding = (e) => {\r\n        if (this.state.buildings.length === 0) {\r\n            this.setState({buildingId: null})\r\n            return;\r\n        }\r\n        const selectedIndex = e.target.options.selectedIndex\r\n        let buildingId = e.target.options[selectedIndex].getAttribute(\"data-key\")\r\n        this.setState({buildingId: buildingId}, this.getFloors)\r\n    }\r\n\r\n    getFloors = () => {\r\n        if (!this.state.buildingId) {\r\n            this.setState({floors: []}, this.setFloor(null))\r\n            return\r\n        }\r\n        client.booking.getFloors({buildingId: this.state.buildingId}).then(res => {\r\n            this.setState({floors: res.data, floorId: null, floorImage: \"\"}, this.getDesks)\r\n        })\r\n    }\r\n\r\n    setFloor = (e) => {\r\n        if (!e || this.state.floors.length === 0) {\r\n            this.setState({floorId: null})\r\n            return;\r\n        }\r\n        const selectedIndex = e.target.options.selectedIndex;\r\n        let floorId = e.target.options[selectedIndex].getAttribute(\"data-key\")\r\n        this.setState({floorId: floorId}, this.getDesks)\r\n        if (selectedIndex > 0) {\r\n            this.setState({floorImage: this.state.floors[selectedIndex - 1].image})\r\n        }\r\n    }\r\n\r\n    getDesks = () => {\r\n        if (!this.state.startDate || !this.state.buildingId || !this.state.floorId) {\r\n            return;\r\n        }\r\n        let startDate = this.formatDate(this.state.startDate)\r\n        client.booking.getFloorInfo(this.state.floorId, startDate).then(res => {\r\n            const desks = res.data.desks\r\n            let temp = []\r\n            desks.forEach(desk => {\r\n                if (!desk.occupied) {\r\n                    temp.push(desk)\r\n                }\r\n            })\r\n            this.setState({availableDesks: temp, desk: null})\r\n        })\r\n    }\r\n\r\n    focusDateChange = (focusedInput) => {\r\n        this.setState({focusedInput})\r\n    }\r\n\r\n    setDeskIdAndNum = (e) => {\r\n        if (!this.state.availableDesks.length) {\r\n            return;\r\n        }\r\n        const selectedIndex = e.target.options.selectedIndex;\r\n        let deskIndex = e.target.options[selectedIndex].getAttribute(\"data-key\")\r\n        let desk = this.state.availableDesks[deskIndex]\r\n        this.setState({desk: desk})\r\n    }\r\n\r\n    render() {\r\n        let minDate = moment(new Date())\r\n        let date = new Date()\r\n        date.setDate(date.getDate() + 183)\r\n        let maxDate = moment(date)\r\n        const isOutsideRange = day => isInclusivelyBeforeDay(day, minDate) || isInclusivelyAfterDay(day, maxDate)\r\n\r\n        return (\r\n            <div>\r\n                <NotificationContainer/>\r\n                <Container style={{marginTop: '5%'}} as={Row} fluid>\r\n                    <Container as={Col} fluid>\r\n                        <h2>Book Your Location</h2>\r\n                        <FormGroup>\r\n                            <DateRangePicker\r\n                                minDate={minDate}\r\n                                maxDate={maxDate}\r\n                                startDate={this.state.startDate}\r\n                                endDate={this.state.endDate}\r\n                                onDatesChange={this.setDates}\r\n                                focusedInput={this.state.focusedInput}\r\n                                onFocusChange={this.focusDateChange}\r\n                                isOutsideRange={isOutsideRange}\r\n                                minimumNights={0}\r\n                                showClearDates={true}\r\n                            />\r\n                        </FormGroup>\r\n                        <Form.Group as={Row}>\r\n                            <Form.Label column sm={2}>\r\n                                Building\r\n                            </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control\r\n                                    onChange={this.setBuilding}\r\n                                    as=\"select\"\r\n                                    single>\r\n                                    <option selected>Select a building</option>\r\n                                    {this.state.buildings.map((building) => {\r\n                                        return <option\r\n                                            key={building.id}\r\n                                            data-key={building.id}\r\n                                        >{building.name}</option>\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formFloor\">\r\n                            <Form.Label column sm={2}>\r\n                                Floor\r\n                            </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control\r\n                                    onChange={this.setFloor}\r\n                                    as=\"select\">\r\n                                    <option selected>Select a floor</option>\r\n                                    {this.state.floors.map((floor) => {\r\n                                        if (this.state.floors.length === 0) {\r\n                                            return \"\"\r\n                                        } else {\r\n                                            return <option\r\n                                                key={floor.id}\r\n                                                data-key={floor.id}>\r\n                                                {floor.floorNumber}</option>\r\n                                        }\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId=\"formDesk\">\r\n                            <Form.Label column sm={2}>\r\n                                Desk No.\r\n                            </Form.Label>\r\n                            <Col sm={10}>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    onChange={this.setDeskIdAndNum}\r\n                                    single>\r\n                                    <option selected>Select a desk</option>\r\n                                    {this.state.availableDesks.map((desk, index) => {\r\n                                        if (this.state.availableDesks.length === 0) {\r\n                                            return \"\"\r\n                                        } else {\r\n                                            return <option\r\n                                                key={desk.id}\r\n                                                data-key={index}>\r\n                                                {desk.deskNumber}</option>\r\n                                        }\r\n                                    })}\r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Button\r\n                            variant=\"primary\"\r\n                            onClick={this.handleSubmit}>\r\n                            Submit\r\n                        </Button>\r\n                    </Container>\r\n                    <Container as={Col} fluid if>\r\n                        {\r\n                            (this.state.buildingId && this.state.floorId && this.state.floorImage)\r\n                                ? <Image\r\n                                    fluid\r\n                                    alt=\"No image for this floor\"\r\n                                    src={\"data:image/jpg;base64, \" + this.state.floorImage}\r\n                                />\r\n                                : \"No image to display\"\r\n                        }\r\n                    </Container>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {auth} = state\r\n    return {name: auth.name, isAdmin: auth.isAdmin, email: auth.email}\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(BookLocationForm)\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Booking Module\\FloorSummaryModal.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Booking Module\\UpdateLocationModal.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Booking Module\\ManageBookingsForm.js",["202"],"import React, {Component} from \"react\";\r\nimport {Button, Form, Table, Col, Row} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport client from \"../../API/api\";\r\n\r\nexport class ManageBookingsForm extends Component {\r\n\r\n    formBodyStyle = {\r\n        width: '90%',\r\n        marginRight: '5%'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {date: \"\", bookings: []}\r\n    }\r\n\r\n    handleDateChange = (e) => {\r\n        this.setState({date: e.target.value})\r\n    }\r\n\r\n    clearDate = (e) => {\r\n        e.preventDefault()\r\n        this.setState({date: \"\"})\r\n    }\r\n\r\n    handleDelete = (e) => {\r\n        e.preventDefault()\r\n        let temp = this.state.bookings\r\n        this.state.bookings.forEach(booking => {\r\n            if (booking.checked) {\r\n                client.booking.deleteBooking({id: booking.id}).then(res => {\r\n                    this.getBookings()\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    handleCheck = (e, booking) => {\r\n        let temp = this.state.bookings\r\n        booking.checked = e.target.checked\r\n        this.setState({bookings: temp})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBookings()\r\n    }\r\n\r\n    getBookings = () => {\r\n        let temp = []\r\n        client.booking.getBookings({email: this.props.email}).then(res => {\r\n            res.data.forEach(booking => {\r\n                booking['checked'] = false\r\n                temp.push(booking)\r\n            })\r\n            this.setState({bookings: temp})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2> YOUR BOOKINGS </h2>\r\n                <Row className=\"float-right\" style={this.formBodyStyle}>\r\n                    <Col sm={8}>\r\n                        <Form.Group controlId=\"formDate\">\r\n                            <Form.Control onChange={this.handleDateChange}\r\n                                          type=\"date\"\r\n                                          name=\"date\"\r\n                                          value={this.state.date}/>\r\n                        </Form.Group>\r\n                    </Col>\r\n                    <Col sm={1}>\r\n                        <Button onClick={this.clearDate}> Clear </Button>\r\n                    </Col>\r\n                    <Col sm={2}>\r\n                    <Button variant=\"outline-danger\"\r\n                            className=\"position-absolute\"\r\n                            onClick={this.handleDelete}>\r\n                        Delete Selected\r\n                    </Button>\r\n                    </Col>\r\n                </Row>\r\n                <Table className=\"bordered float-right\" style={this.formBodyStyle}>\r\n                    <thead>\r\n                    <tr>\r\n                    <th> Select</th>\r\n                    <th> Location</th>\r\n                    <th> Date</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.bookings.map((booking) => {\r\n                        if (this.state.date && booking.date.substr(0, 10) !== this.state.date) {\r\n                            return \"\"\r\n                        }\r\n                        return (\r\n                            <tr key={booking.id}>\r\n                                <td>\r\n                                    <Form.Check\r\n                                        custom\r\n                                        type=\"checkbox\"\r\n                                        id={booking.id}\r\n                                        onChange={(e) => {\r\n                                            this.handleCheck(e, booking)\r\n                                        }}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    {/*TODO: update to use buildilng code when avaialble*/}\r\n                                    {booking.desk.floor.building.name} -\r\n                                    Floor {booking.desk.floor.floorNumber} - {booking.desk.deskNumber}\r\n                                </td>\r\n                                <td>\r\n                                    {booking.date.substr(0, 10)}\r\n                                </td>\r\n                            </tr>)\r\n                    })}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {auth} = state\r\n    return {email: auth.email}\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(ManageBookingsForm);\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\EmployeeViewWindow.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Booking Module\\AddLocationModal.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Mail Module\\ViewRequests.js",["203","204"],"import React, {Component} from \"react\";\r\nimport {Card, Nav} from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\";\r\nimport client from \"../../API/api\";\r\nimport {MAIL_STATUS, requestStyles, highlightedInfo} from \"../../constants\";\r\nimport {toTitleCase} from \"../../helpers\";\r\nimport {MailRequestModal} from \"./MailRequestModal\";\r\nimport EventBus from \"../../EventBus\";\r\n\r\nexport class ViewRequests extends Component {\r\n    REQUEST_TABS = {\r\n        all: {title: \"All\", link: \"#all\"},\r\n        awaitingRequest: {title: MAIL_STATUS.awaitingRequest, link: \"#awaitingRequest\"},\r\n        notStarted: {title: MAIL_STATUS.notStarted, link: \"#notStarted\"},\r\n        inProgress: {title: MAIL_STATUS.inProgress, link: \"#inProgress\"},\r\n        closed: {title: MAIL_STATUS.closed, link: \"#closed\"}\r\n    }\r\n\r\n    initialState = {\r\n        currTab: this.REQUEST_TABS.all.title, mails: []\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = JSON.parse((JSON.stringify(this.initialState)))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllRequests(this.state.currTab)\r\n        EventBus.on(\"mailUpdate\", (data) => {\r\n            this.getAllRequests(this.state.currTab)\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.adminView !== prevProps.adminView) {\r\n            this.getAllRequests(this.state.currTab)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        EventBus.remove(\"mailUpdate\");\r\n    }\r\n\r\n    getAllRequests(currTab) {\r\n        if (this.props.adminView && this.props.isAdmin) {\r\n            this.renderAdminRequests(currTab)\r\n        } else {\r\n            this.renderMyRequests(currTab)\r\n        }\r\n    }\r\n\r\n    renderAdminRequests(currTab) {\r\n        let temp = {}\r\n        if (currTab === this.REQUEST_TABS.all.title) {\r\n            client.mail.getAllMail().then(res => {\r\n                res.data.forEach(mail => {\r\n                    temp[mail.id] = mail\r\n                })\r\n                this.setState({mails: temp})\r\n            })\r\n        } else {\r\n            client.mail.getMailByStatus({status: currTab}).then(res => {\r\n                res.data.forEach(mail => {\r\n                    temp[mail.id] = mail\r\n                })\r\n                this.setState({mails: temp})\r\n            })\r\n        }\r\n    }\r\n\r\n    renderMyRequests(currTab) {\r\n        let temp = {}\r\n        let email = this.props.email\r\n        if (currTab === this.REQUEST_TABS.all.title) {\r\n            client.mail.getMailByEmail({email: email}).then(res => {\r\n                res.data.forEach(mail => {\r\n                    temp[mail.id] = mail\r\n                })\r\n                this.setState({mails: temp})\r\n            })\r\n        } else {\r\n            client.mail.getMailByStatus({status: currTab}).then(res => {\r\n                res.data.forEach(mail => {\r\n                    if (mail.email === email) {\r\n                        temp[mail.id] = mail\r\n                    }\r\n                })\r\n                this.setState({mails: temp})\r\n            })\r\n        }\r\n    }\r\n\r\n    handleSelect = (title) => {\r\n        this.setState({currTab: title})\r\n        this.getAllRequests(title)\r\n    }\r\n\r\n    renderRequest = (mail) => {\r\n        return (\r\n            <Card style={requestStyles} className=\"mt-4\">\r\n                <Card.Header>Sent from {toTitleCase(mail.sender)}\r\n                    <span className={\"float-right\"}>{mail.building.name}</span>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        Status: <span style={highlightedInfo}> {toTitleCase(mail.status)}</span>\r\n\r\n                        <span className={\"float-right\"}>\r\n                                                    Requested Completion Date:\r\n                                            <span\r\n                                                style={highlightedInfo}> {mail.request.requestedCompletionDate.substr(0, 10)} </span>\r\n                                        </span>\r\n                        <br/>\r\n\r\n                    </Card.Text>\r\n\r\n                    <Card.Text className={\"float-right\"}>\r\n                        {this.props.adminView ? \"TODO PUT ADMIN MODAL HERE\" : \"\"}\r\n                        {!this.props.adminView && (mail.status == MAIL_STATUS.awaitingRequest || mail.status == MAIL_STATUS.notStarted) ?\r\n                            <MailRequestModal mail={mail} request={mail.request}/>\r\n                            : \"\"}\r\n                    </Card.Text>\r\n\r\n                    <Card.Text>\r\n                        {this.props.adminView &&\r\n                        <span>\r\n                                        Requested By:\r\n                                        <span style={highlightedInfo}> {mail.email}</span>\r\n                                        </span>\r\n                        }\r\n                    </Card.Text>\r\n\r\n                    <Card.Text>\r\n                        Instruction - <span style={highlightedInfo}>{mail.request.instructionType}</span>\r\n                        <br/>\r\n                        <span style={highlightedInfo}>\r\n                                            {mail.request.instructionDescription}\r\n                                        </span>\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        Feedback:\r\n                        <span\r\n                            style={highlightedInfo}>\r\n                                            {mail.request.feedback}\r\n                                        </span>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    {mail.date.substr(0, 10)}\r\n                </Card.Footer>\r\n            </Card>\r\n        )\r\n    }\r\n\r\n    renderMail(mail) {\r\n        return (\r\n            <Card style={requestStyles} className=\"mt-4\">\r\n                <Card.Header>Sent from {toTitleCase(mail.sender)}\r\n                    <span className={\"float-right\"}>{mail.building.name}</span>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        To: <span style={highlightedInfo}> {mail.email}</span>\r\n                    </Card.Text>\r\n                    <Card.Text>\r\n                        Status: <span style={highlightedInfo}> {toTitleCase(mail.status)}</span>\r\n                    </Card.Text>\r\n\r\n                    <Card.Text className={\"float-right\"}>\r\n                        {this.props.adminView\r\n                            ? \"\"\r\n                            : <MailRequestModal mail={mail}/>}\r\n                    </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    {mail.date.substr(0, 10)}\r\n                </Card.Footer>\r\n            </Card>\r\n        )\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>{this.state.currTab} Requests</h2>\r\n                <Nav variant=\"tabs\" defaultActiveKey=\"#all\">\r\n                    {Object.values(this.REQUEST_TABS).map(tab => {\r\n                        return (\r\n                            <Nav.Item>\r\n                                <Nav.Link\r\n                                    href={tab.link}\r\n                                    onSelect={() => {\r\n                                        this.handleSelect(tab.title)\r\n                                    }}>\r\n                                    {tab.title}\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        )\r\n                    })}\r\n                </Nav>\r\n                <div>\r\n                    {Object.keys(this.state.mails).length === 0 ? \"No mail to display\" : \"\"}\r\n                    {Object.keys(this.state.mails).map(key => {\r\n                        const mail = this.state.mails[key]\r\n                        if (mail.status !== MAIL_STATUS.awaitingRequest) {\r\n                            return this.renderRequest(mail)\r\n                        } else {\r\n                            return this.renderMail(mail)\r\n                        }\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {auth} = state\r\n    return {name: auth.name, isAdmin: auth.isAdmin, email: auth.email}\r\n}\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(ViewRequests)","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\AddTopicModal.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Mail Module\\AddMailModal.js",["205"],"import React from \"react\";\r\nimport {Button, Form, Container, ModalBody, Modal, Col, Row} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport client from \"../../API/api\";\r\nimport {NotificationManager, NotificationContainer} from \"react-notifications\";\r\nimport EventBus from \"../../EventBus\";\r\nimport {Typeahead} from 'react-bootstrap-typeahead';\r\n\r\n\r\nexport class AddMailModal extends React.Component {\r\n\r\n    initialState = {show: false, email: \"\", buildings: [], buildingId: null, sender: \"\", users: []}\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = JSON.parse(JSON.stringify(this.initialState))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBuildings()\r\n        this.getUsers()\r\n        EventBus.on(\"buildingAddDelete\", (data) => {\r\n            this.getBuildings()\r\n            this.setState({buildingId: null})\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if( this.props.accessToken !==  prevProps.accessToken)\r\n        {\r\n            this.getUsers()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        EventBus.remove(\"buildingAddDelete\");\r\n    }\r\n\r\n    getBuildings = () => {\r\n        client.booking.getBuildings().then(res => {\r\n            this.setState({buildings: res.data})\r\n        })\r\n    }\r\n\r\n    getUsers = () => {\r\n        if (!this.props.accessToken) {\r\n            return;\r\n        }\r\n        client.user.getAllUsers().then(users => {\r\n            if (users) {\r\n                this.setState({users: users})\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (!this.validateEmail()) {\r\n            NotificationManager.error(\"Please enter a valid email\", \"\", 2000)\r\n            return;\r\n        }\r\n        if (this.state.sender === \"\" || !this.state.buildingId) {\r\n            NotificationManager.error(\"Please fill in all fields\", \"\", 2000)\r\n            return;\r\n        }\r\n        const payload = {\r\n            email: this.state.email,\r\n            buildingId: this.state.buildingId,\r\n            sender: this.state.sender\r\n        }\r\n        client.mail.addMail(payload).then(res => {\r\n            NotificationManager.success(\"Mail successfully added\", \"\", 2000)\r\n            EventBus.dispatch(\"mailUpdate\", null)\r\n        })\r\n        this.setState({email: \"\", sender: \"\"})\r\n    };\r\n\r\n    handleShow = (e) => {\r\n        this.setState({show: true})\r\n    }\r\n\r\n    handleClose = (e) => {\r\n        this.setState({show: false})\r\n        this.setState({email: \"\", buildingId: null, sender: \"\"})\r\n    }\r\n\r\n    validateEmail = () => {\r\n        let email = this.state.email\r\n        if (email = \"\" || !email) { return false }\r\n        return true\r\n    }\r\n\r\n    setEmail = (e) => {\r\n        if (!e || !e[0] || !e[0].userPrincipalName) {\r\n            this.setState({email: \"\"})\r\n            return;\r\n        }\r\n        let email = e[0].userPrincipalName\r\n        this.setState({email: email})\r\n    }\r\n\r\n    setSender = (e) => {\r\n        let sender = e.target.value\r\n        this.setState({sender: sender})\r\n    }\r\n\r\n    setBuilding = (e) => {\r\n        const selectedIndex = e.target.options.selectedIndex;\r\n        let buildingId = e.target.options[selectedIndex].getAttribute('data-key')\r\n        this.setState({buildingId: buildingId})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"admin-modal\">\r\n                <NotificationContainer />\r\n                <button className=\"btn btn-info\" onClick={this.handleShow}>\r\n                    Add Mail\r\n                </button>\r\n\r\n                <Modal show={this.state.show} onHide={this.handleClose} size={\"lg\"}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Add Location</Modal.Title>\r\n                    </Modal.Header>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <Container fluid>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label column sm={2}>Receiver</Form.Label>\r\n                                    <Col sm={10}>\r\n                                    <Typeahead\r\n                                        id={\"email-typeahead\"}\r\n                                        labelKey={option => `${option.userPrincipalName} (${option.displayName})`}\r\n                                        options={this.state.users}\r\n                                        onChange={this.setEmail}\r\n                                        placeholder=\"email@example.com\"\r\n                                    >\r\n                                    </Typeahead>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group as={Row}>\r\n                                    <Form.Label  column sm={3}>Sender</Form.Label>\r\n                                    <Col sm={9}>\r\n                                        <Form.Control type=\"text\"\r\n                                                      onChange={this.setSender}\r\n                                                      value={this.state.sender}\r\n                                                      placeholder=\"Sender Name\"/>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"addMail.buildingSelect\">\r\n                                    <Form.Label>Select a building</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.setBuilding}>\r\n                                        <option disabled selected > -- select one --</option>\r\n                                        {this.state.buildings.map((building) =>\r\n                                            <option key={building.id} data-key={building.id}>\r\n                                                {building.name} </option>\r\n                                        )}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\">Add</Button>\r\n                            </Container>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>);\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {auth} = state\r\n    return {accessToken: auth.accessToken}\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(AddMailModal)\r\n","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\constants.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\helpers.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\EventBus.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Mail Module\\MailRequestModal.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\EmployeeSidebar.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\ViewNotifications.js",["206"],"import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Container, Card, Button, Modal} from \"react-bootstrap\";\r\nimport client from \"../../API/api\";\r\nimport {toTitleCase} from \"../../helpers\";\r\nimport \"../../index.css\";\r\nimport Post from \"./Post\";\r\nimport EventBus from \"../../EventBus\";\r\n\r\nexport class ViewNotifications extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {notifications: {}, currentPost: {}, currentPostTitle: \"\", show: false}\r\n    }\r\n\r\n    notificationStyles = {\r\n        textAlign: 'left'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getNotifications()\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({show: false})\r\n    }\r\n\r\n    handleOpenPosts = (e, notification) => {\r\n        e.preventDefault()\r\n        this.setState({currentPost: notification.posting, show: true})\r\n    }\r\n\r\n    handleDeleteNotification = (e, id) => {\r\n        e.preventDefault()\r\n        let temp = this.state.notifications\r\n        client.social.deleteNotification({id}).then( res => {\r\n            delete temp[id]\r\n            this.setState({bookings: temp})\r\n        })\r\n    }\r\n\r\n    getNotifications = () => {\r\n        let temp = {}\r\n        client.social.getNotificationsByEmail({email: this.props.email}).then(res => {\r\n            res.data.forEach(notification => {\r\n                temp[notification.id] = notification\r\n            })\r\n            this.setState({notifications: temp})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                {this.state.notifications.length === 0? \"You have no new notifications\" : \"\"}\r\n                {Object.keys(this.state.notifications).map(key => {\r\n                    const notification = this.state.notifications[key]\r\n                    return (\r\n                        <Card border=\"secondary\" className=\"mt-4\" style={this.notificationStyles} key={key}>\r\n                            <Card.Body className=\"card-view-border\">\r\n                                <Card.Title>New Post in \"{toTitleCase(notification.posting.topic.name)}\"</Card.Title>\r\n                                <Card.Text>\r\n                                    from {notification.posting.email} on {notification.date.substr(0, 10)}\r\n                                </Card.Text>\r\n                                <Button\r\n                                    className=\"left-button\"\r\n                                    variant={\"outline-secondary\"}\r\n                                    onClick={(e) => {this.handleOpenPosts(e, notification)}}>See Post\r\n                                </Button>\r\n                                <Button\r\n                                    variant={\"outline-secondary\"}\r\n                                    onClick={(e) =>\r\n                                    {this.handleDeleteNotification(e, notification.id)}}>\r\n                                    Delete\r\n                                </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n\r\n                    )\r\n                })}\r\n                <Modal show={this.state.show} onHide={this.handleClose} size=\"lg\" scrollable>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>{this.state.currentPostTitle}</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Post postId={this.state.currentPost.id} />\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const {auth} = state\r\n    return {name: auth.name, isAdmin: auth.isAdmin, email: auth.email}\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(ViewNotifications)","C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\ViewTopics.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\ViewPosts.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\AddPostModal.js",[],"C:\\Users\\roy97\\IdeaProjects\\beeware-validate\\frontend\\pandemic-pal\\src\\components\\Social Module\\Post.js",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":16,"nodeType":"213","messageId":"214","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"215","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"216","line":6,"column":9,"nodeType":"213","messageId":"214","endLine":6,"endColumn":15},{"ruleId":"211","severity":1,"message":"215","line":7,"column":8,"nodeType":"213","messageId":"214","endLine":7,"endColumn":14},{"ruleId":"211","severity":1,"message":"217","line":2,"column":8,"nodeType":"213","messageId":"214","endLine":2,"endColumn":19},{"ruleId":"211","severity":1,"message":"218","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":21},{"ruleId":"219","severity":1,"message":"220","line":22,"column":9,"nodeType":"221","messageId":"222","endLine":27,"endColumn":15},{"ruleId":"223","severity":1,"message":"224","line":40,"column":64,"nodeType":"225","messageId":"226","endLine":40,"endColumn":65,"suggestions":"227"},{"ruleId":"223","severity":1,"message":"224","line":40,"column":74,"nodeType":"225","messageId":"226","endLine":40,"endColumn":75,"suggestions":"228"},{"ruleId":"211","severity":1,"message":"216","line":3,"column":9,"nodeType":"213","messageId":"214","endLine":3,"endColumn":15},{"ruleId":"229","severity":1,"message":"230","line":12,"column":17,"nodeType":"231","endLine":12,"endColumn":57},{"ruleId":"211","severity":1,"message":"232","line":3,"column":44,"nodeType":"213","messageId":"214","endLine":3,"endColumn":50},{"ruleId":"211","severity":1,"message":"233","line":3,"column":52,"nodeType":"213","messageId":"214","endLine":3,"endColumn":57},{"ruleId":"211","severity":1,"message":"234","line":3,"column":59,"nodeType":"213","messageId":"214","endLine":3,"endColumn":70},{"ruleId":"211","severity":1,"message":"235","line":29,"column":13,"nodeType":"213","messageId":"214","endLine":29,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":120,"column":64,"nodeType":"238","messageId":"239","endLine":120,"endColumn":66},{"ruleId":"236","severity":1,"message":"237","line":120,"column":110,"nodeType":"238","messageId":"239","endLine":120,"endColumn":112},{"ruleId":"240","severity":1,"message":"241","line":88,"column":13,"nodeType":"242","messageId":"243","endLine":88,"endColumn":33},{"ruleId":"211","severity":1,"message":"244","line":8,"column":8,"nodeType":"213","messageId":"214","endLine":8,"endColumn":16},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'client' is defined but never used.","'Button' is defined but never used.","'userReducer' is defined but never used.","'createStore' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-useless-escape","Unnecessary escape character: \\'.","TemplateElement","unnecessaryEscape",["247","248"],["249","250"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Figure' is defined but never used.","'Modal' is defined but never used.","'ModalFooter' is defined but never used.","'temp' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","'EventBus' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"251","fix":"252","desc":"253"},{"messageId":"254","fix":"255","desc":"256"},{"messageId":"251","fix":"257","desc":"253"},{"messageId":"254","fix":"258","desc":"256"},"removeEscape",{"range":"259","text":"260"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"261","text":"262"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"263","text":"260"},{"range":"264","text":"262"},[1646,1647],"",[1646,1646],"\\",[1656,1657],[1656,1656]]